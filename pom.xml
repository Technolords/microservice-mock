<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation=" http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.technolords.micro.service</groupId>
    <artifactId>microservice-mock</artifactId>
    <version>1.2.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Technolords :: Microservices :: Mock</name>
    <description>
        A mock server, able to simulate any web service
    </description>

    <!--+
        | Properties
        +-->
    <properties>
        <!--+
            | Project properties
            +-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <!--+
            | Version properties
            +-->
        <camel.version>2.18.0</camel.version>
        <camel.testng.version>2.18.0</camel.testng.version>
        <commons.io.version>2.4</commons.io.version>
        <jetty.port>9090</jetty.port>
        <jetty.util.version>9.2.19.v20160908</jetty.util.version>
        <jetty.maven.plugin.version>9.4.0.M0</jetty.maven.plugin.version>
        <log4j.version>2.7</log4j.version>
        <maven.build.helper.plugin.version>1.12</maven.build.helper.plugin.version>
        <maven.compiler.plugin.version>3.3</maven.compiler.plugin.version>
        <maven.shade.plugin.version>2.4.3</maven.shade.plugin.version>
        <maven.source.plugin.version>2.4</maven.source.plugin.version>
        <maven.surefire.plugin.version>2.18.1</maven.surefire.plugin.version>
        <org.testng.version>6.9.4</org.testng.version>
    </properties>

    <!--+
        | Source control management
        +-->
    <scm>
        <connection>scm:git:https://github.com/Technolords/microservice-mock</connection>
        <tag>HEAD</tag>
    </scm>

    <!--+
        | Dependencies
        +-->
    <dependencies>

        <!--+
            | Default scope
            +-->
        <dependency>
            <!-- Required to use jetty:http endpoints -->
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-jetty9</artifactId>
            <version>${camel.version}</version>
        </dependency>
        <dependency>
            <!-- Required to use logging -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <!-- Required to use logging -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <!-- Required to bridge slf4j over log4j -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <!-- Required to use log4j correctly from jetty -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <!-- Required to use the queued thread pool -->
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-util</artifactId>
            <version>${jetty.util.version}</version>
        </dependency>
        <dependency>
            <!-- Required to support: mvn run:jetty -->
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-maven-plugin</artifactId>
            <version>${jetty.maven.plugin.version}</version>
        </dependency>

        <!--+
            | Test scope
            +-->
        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-testng</artifactId>
            <version>${camel.testng.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${org.testng.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!--+
        | Build
        +-->
    <build>
        <!-- Allow placeholders in files in resources folder to be translated -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <defaultGoal>install</defaultGoal>

        <plugins>

            <plugin>
                <!-- Required to compile the java sources against a JVM spec -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <!-- Required to bundle all dependencies in a single jar (packaging) -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>${maven.shade.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>net.technolords.micro.camel.RestServiceCamelContext</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Source plugin configuration -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven.source.plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Required to execute unit tests, supporting both JUnit and TestNG -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven.surefire.plugin.version}</version>
                <configuration>
                    <!--<childDelegation>false</childDelegation>-->
                    <useFile>true</useFile>
                    <!-- Due to memory problems, each test class runs in a separate JVM -->
                    <!--<forkMode>true</forkMode>-->
                    <failIfNoTests>false</failIfNoTests>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <id>exec-with-testng</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <testNGArtifactName>none:none</testNGArtifactName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>test-with-junit</id>
                        <phase>test</phase>
                        <goals>
                            <goal>test</goal>
                        </goals>
                        <configuration>
                            <junitArtifactName>none:none</junitArtifactName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Required to generate timestamp with correct timezone -->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${maven.build.helper.plugin.version}</version>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>build.timestamp</name>
                            <pattern>yyyy-MM-dd HH:mm:ss</pattern>
                            <timeZone>Etc/GMT-1</timeZone>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <!-- Required to run jetty as servlet container -->
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.maven.plugin.version}</version>
                <configuration>
                    <httpConnector>
                        <port>${jetty.port}</port>
                    </httpConnector>
                </configuration>
            </plugin>

            <plugin>
                <!-- Release plugin configuration-->
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <!-- @ : substitute the values after the version transformation has taken place -->
                    <tagNameFormat>@{project.version}</tagNameFormat>
                </configuration>
            </plugin>

        </plugins>

    </build>

    <distributionManagement>
        <downloadUrl>https://github.com/Technolords/microservice-mock/releases</downloadUrl>
    </distributionManagement>

</project>
