<?xml version="1.0"?>
<project
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
>
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.technolords.service</groupId>
    <artifactId>microservice-mock</artifactId>
    <version>2.0.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <properties>
        <!--+
            | Generic Maven properties
            +-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <!--+
            | Custom properties
            +-->
        <version.camel>3.16.0</version.camel>
        <version.fasterxml.jackson>2.13.2</version.fasterxml.jackson>
        <version.git.commit>4.0.0</version.git.commit>
        <version.io.micrometer>1.8.1</version.io.micrometer>
        <version.jsonpath>2.6.0</version.jsonpath>
        <version.junit.jupiter>5.6.2</version.junit.jupiter>
        <version.log4j2>2.17.2</version.log4j2>
        <version.maven.plugin.compiler>3.8.1</version.maven.plugin.compiler>
        <version.maven.plugin.compiler.java>11</version.maven.plugin.compiler.java>
        <version.maven.plugin.failsafe>2.22.2</version.maven.plugin.failsafe>
        <version.maven.plugin.surefire>2.22.2</version.maven.plugin.surefire>
        <version.maven.plugin.jacoco>0.8.4</version.maven.plugin.jacoco>
        <version.mockito>4.0.0</version.mockito>
        <version.slf4j>1.7.36</version.slf4j>
        <version.spring.boot>2.6.6</version.spring.boot>
        <version.spring.core>5.3.16.RELEASE</version.spring.core>
        <version.testng>7.1.0</version.testng>
    </properties>

    <scm>
	    <connection>scm:git:https://github.com/Technolords/microservice-todo.git</connection>
    </scm>

    <dependencies>

        <!--+
            | Default scope dependencies (sorted by groupId and artifactId to enhance readability)
            +-->
        <dependency>
            <!-- Required to use Json format -->
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${version.fasterxml.jackson}</version>
        </dependency>

        <dependency>
            <!-- Required to use Json format -->
            <groupId>com.fasterxml.jackson.dataformat</groupId>
            <artifactId>jackson-dataformat-yaml</artifactId>
            <version>${version.fasterxml.jackson}</version>
        </dependency>

        <dependency>
            <!-- Required to use Jsonpath expressions-->
            <groupId>com.jayway.jsonpath</groupId>
            <artifactId>json-path</artifactId>
            <version>${version.jsonpath}</version>
        </dependency>

        <dependency>
            <!-- Required to produce metrics for Prometheus -->
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-core</artifactId>
            <version>${version.io.micrometer}</version>
        </dependency>

        <dependency>
            <!-- Required to produce metrics for Prometheus -->
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
            <version>${version.io.micrometer}</version>
        </dependency>

        <dependency>
            <!-- Required for Camel context -->
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-spring-boot</artifactId>
            <version>${version.camel}</version>
        </dependency>

        <dependency>
            <!-- Required for Camel direct routes -->
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-direct-starter</artifactId>
            <version>${version.camel}</version>
        </dependency>

        <dependency>
            <!-- Required for Camel mock routes -->
            <groupId>org.apache.camel.springboot</groupId>
            <artifactId>camel-mock-starter</artifactId>
            <version>${version.camel}</version>
        </dependency>

        <dependency>
            <!-- Required for Logger, Level and more -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${version.log4j2}</version>
        </dependency>

        <dependency>
            <!-- Required for Appenders, Layout, Filters and more -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${version.log4j2}</version>
        </dependency>

        <dependency>
            <!-- Required for actual Slf4j implementation -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <version>${version.log4j2}</version>
        </dependency>

        <dependency>
            <!-- Required for logging in a web container -->
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-web</artifactId>
            <version>${version.log4j2}</version>
        </dependency>

        <dependency>
            <!-- Required for Slfj classes -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${version.slf4j}</version>
        </dependency>

        <dependency>
            <!-- Required for exclusions -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
            <version>${version.spring.boot}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <!-- No Logback please (as it is the default) -->
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <!-- Required for out-of-the-box /info, /health /actuator/* rest endpoints -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>${version.spring.boot}</version>
        </dependency>

        <dependency>
            <!-- Required for web container, alternative to Tomcat -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <version>${version.spring.boot}</version>
        </dependency>

        <dependency>
            <!-- Required as alternative to spring-boot-starter-logging which uses logback -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>${version.spring.boot}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <!-- Required for Http endpoints, such as Rest API -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${version.spring.boot}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!--+
            | Test scope
            +-->

        <dependency>
            <!-- Required for Java unit testing -->
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${version.junit.jupiter}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Required to stub classes -->
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${version.mockito}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.camel</groupId>
            <artifactId>camel-test-spring-junit5</artifactId>
            <version>${version.camel}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <!-- Required for Spring support -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${version.spring.boot}</version>
            <scope>test</scope>
            <exclusions>
                <!-- This is Junit 4, we want Junit 5 -->
                <!--+
                    | Excluding causes the following problem:
                    | WARNING: TestEngine with ID 'junit-vintage' failed to discover tests
                    | java.lang.NoClassDefFoundError: junit/runner/Version
                    +-->
<!--                <exclusion>-->
<!--                    <groupId>junit</groupId>-->
<!--                    <artifactId>junit</artifactId>-->
<!--                </exclusion>-->
                <exclusion>
                    <!-- A newer version is included ourselves (2.23.4 -> 2.28.2) -->
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <!-- Required for executing testing cases (alternative to Junit)  -->
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${version.testng}</version>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>${basedir}/src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${version.maven.plugin.compiler}</version>
                <configuration>
                    <release>${version.maven.plugin.compiler.java}</release>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${version.maven.plugin.jacoco}</version>
                <executions>
                    <execution>
                        <id>jacoco-init</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <!-- attached to Maven test phase -->
                    <execution>
                        <id>jacoco-report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>${version.maven.plugin.failsafe}</version>
                <configuration>
                    <argLine>@{argLine} --illegal-access=permit</argLine>
                </configuration>
            </plugin>

            <plugin>
                <!-- Required for Junit 5 and TestNG frameworks, icm with Java 11 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${version.maven.plugin.surefire}</version>
                <configuration>
                    <failIfNoTests>false</failIfNoTests>
                    <!-- https://maven.apache.org/surefire/maven-surefire-plugin/examples/fork-options-and-parallel-execution.html -->
                    <forkCount>1C</forkCount>
                    <reuseForks>false</reuseForks>
                    <!-- https://maven.apache.org/surefire/maven-surefire-plugin/examples/shutdown.html -->
                    <shutdown>kill</shutdown>
                    <argLine>@{argLine} --illegal-access=permit -Xmx1024m</argLine>
                </configuration>
                <dependencies>
                    <dependency>
                        <!-- Adding support for Junit 5 -->
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-junit-platform</artifactId>
                        <version>${version.maven.plugin.surefire}</version>
                    </dependency>
                    <dependency>
                        <!-- Adding support for TestNG -->
                        <groupId>org.apache.maven.surefire</groupId>
                        <artifactId>surefire-testng</artifactId>
                        <version>${version.maven.plugin.surefire}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <!-- Required to package all dependencies into an executable jar -->
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${version.spring.boot}</version>
                <configuration>
                    <mainClass>net.technolords.util.MockMain</mainClass>
                    <finalName>mock-service</finalName>
                    <addResources>true</addResources>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>${version.git.commit}</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <prefix>git</prefix>
                    <verbose>false</verbose>
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/todo-git.properties</generateGitPropertiesFilename>
                    <format>json</format>
                    <gitDescribe>
                        <skip>false</skip>
                        <always>false</always>
                        <dirty>-dirty</dirty>
                    </gitDescribe>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
